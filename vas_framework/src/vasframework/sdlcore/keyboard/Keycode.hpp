//======================================================================
//This Source Code Form is subject to the terms of the Mozilla Public
//License, v. 2.0. If a copy of the MPL was not distributed with this
//file, You can obtain one at https://mozilla.org/MPL/2.0/.
//======================================================================
#pragma once
#include <SDL_keycode.h>
#include "../../VASConfig.hpp"

namespace vas::sdl
{
	/**
	 * @ingroup sdl_basic
	 * @{
	 */
	/** @brief The SDL virtual key representation. */
	enum class Keycode
	{
		unknow = SDLK_UNKNOWN,
		//aka return
		enter = SDLK_RETURN,
		escape = SDLK_ESCAPE,
		backspace = SDLK_BACKSPACE,
		tab = SDLK_TAB,
		space = SDLK_SPACE,
		exclaim = SDLK_EXCLAIM,
		quotedbl = SDLK_QUOTEDBL,
		hash = SDLK_HASH,
		percent = SDLK_PERCENT,
		dollar = SDLK_DOLLAR,
		ampersand = SDLK_AMPERSAND,
		quote = SDLK_QUOTE,
		leftparen = SDLK_LEFTPAREN,
		rightparen = SDLK_RIGHTPAREN,
		asterisk = SDLK_ASTERISK,
		plus = SDLK_PLUS,
		comma = SDLK_COMMA,
		minus = SDLK_MINUS,
		period = SDLK_PERIOD,
		slash = SDLK_SLASH,
		num0 = SDLK_0,
		num1 = SDLK_1,
		num2 = SDLK_2,
		num3 = SDLK_3,
		num4 = SDLK_4,
		num5 = SDLK_5,
		num6 = SDLK_6,
		num7 = SDLK_7,
		num8 = SDLK_8,
		num9 = SDLK_9,
		colon = SDLK_COLON,
		semicolon = SDLK_SEMICOLON,
		less = SDLK_LESS,
		equals = SDLK_EQUALS,
		greater = SDLK_GREATER,
		question = SDLK_QUESTION,
		at = SDLK_AT,
		leftbraket = SDLK_LEFTBRACKET,
		backslash = SDLK_BACKSLASH,
		rightbracket = SDLK_RIGHTBRACKET,
		caret = SDLK_CARET,
		underscore = SDLK_UNDERSCORE,
		backquote = SDLK_BACKQUOTE,
		a = SDLK_a,
		b = SDLK_b,
		c = SDLK_c,
		d = SDLK_d,
		e = SDLK_e,
		f = SDLK_f,
		g = SDLK_g,
		h = SDLK_h,
		i = SDLK_i,
		j = SDLK_j,
		k = SDLK_k,
		l = SDLK_l,
		m = SDLK_m,
		n = SDLK_n,
		o = SDLK_o,
		p = SDLK_p,
		q = SDLK_q,
		r = SDLK_r,
		s = SDLK_s,
		t = SDLK_t,
		u = SDLK_u,
		v = SDLK_v,
		w = SDLK_w,
		x = SDLK_x,
		y = SDLK_y,
		z = SDLK_z,
		capslock = SDLK_CAPSLOCK,
		f1 = SDLK_F1,
		f2 = SDLK_F2,
		f3 = SDLK_F3,
		f4 = SDLK_F4,
		f5 = SDLK_F5,
		f6 = SDLK_F6,
		f7 = SDLK_F7,
		f8 = SDLK_F8,
		f9 = SDLK_F9,
		f10 = SDLK_F10,
		f11 = SDLK_F11,
		f12 = SDLK_F12,
		printscreen = SDLK_PRINTSCREEN,
		scrollock = SDLK_SCROLLLOCK,
		pause = SDLK_PAUSE,
		insert = SDLK_INSERT,
		home = SDLK_HOME,
		pageup = SDLK_PAGEUP,
		//aka delete
		deleteKey = SDLK_DELETE,
		end = SDLK_END,
		pagedown = SDLK_PAGEDOWN,
		right = SDLK_RIGHT,
		left = SDLK_LEFT,
		down = SDLK_DOWN,
		up = SDLK_UP,
		numlockclear = SDLK_NUMLOCKCLEAR,
		kpDivide = SDLK_KP_DIVIDE,
		kpMultiply = SDLK_KP_MULTIPLY,
		kpMinus = SDLK_KP_MINUS,
		kpPlus = SDLK_KP_PLUS,
		kpEnter = SDLK_KP_ENTER,
		kp1 = SDLK_KP_1,
		kp2 = SDLK_KP_2,
		kp3 = SDLK_KP_3,
		kp4 = SDLK_KP_4,
		kp5 = SDLK_KP_5,
		kp6 = SDLK_KP_6,
		kp7 = SDLK_KP_7,
		kp8 = SDLK_KP_8,
		kp9 = SDLK_KP_9,
		kp0 = SDLK_KP_0,
		kpPeriod = SDLK_KP_PERIOD,
		application = SDLK_APPLICATION,
		power = SDLK_POWER,
		kpEquals = SDLK_KP_EQUALS,
		f13 = SDLK_F13,
		f14 = SDLK_F14,
		f15 = SDLK_F15,
		f16 = SDLK_F16,
		f17 = SDLK_F17,
		f18 = SDLK_F18,
		f19 = SDLK_F19,
		f20 = SDLK_F20,
		f21 = SDLK_F21,
		f22 = SDLK_F22,
		f23 = SDLK_F23,
		f24 = SDLK_F24,
		execute = SDLK_EXECUTE,
		help = SDLK_HELP,
		menu = SDLK_MENU,
		select = SDLK_SELECT,
		stop = SDLK_STOP,
		again = SDLK_AGAIN,
		undo = SDLK_UNDO,
		cut = SDLK_CUT,
		copy = SDLK_COPY,
		paste = SDLK_PASTE,
		find = SDLK_FIND,
		mute = SDLK_MUTE,
		volumeup = SDLK_VOLUMEUP,
		volumedown = SDLK_VOLUMEDOWN,
		kpComma = SDLK_KP_COMMA,
		kpEusalsas400 = SDLK_KP_EQUALSAS400,
		alterase = SDLK_ALTERASE,
		sysreq = SDLK_SYSREQ,
		cancle = SDLK_CANCEL,
		clear = SDLK_CLEAR,
		prior = SDLK_PRIOR,
		return2 = SDLK_RETURN2,
		separator = SDLK_SEPARATOR,
		out = SDLK_OUT,
		oper = SDLK_OPER,
		clearagain = SDLK_CLEARAGAIN,
		crsel = SDLK_CRSEL,
		exsel = SDLK_EXSEL,
		kp00 = SDLK_KP_00,
		kp000 = SDLK_KP_000,
		thousandsseparator = SDLK_THOUSANDSSEPARATOR,
		decimalseparator = SDLK_DECIMALSEPARATOR,
		currencyunit = SDLK_CURRENCYUNIT,
		currencyubunit = SDLK_CURRENCYSUBUNIT,
		kpLeftparen = SDLK_KP_LEFTPAREN,
		kpRightparen = SDLK_KP_RIGHTPAREN,
		kpLeftBrace = SDLK_KP_LEFTBRACE,
		kpRightBrace = SDLK_KP_RIGHTBRACE,
		kpTab = SDLK_KP_TAB,
		kpBackspace = SDLK_KP_BACKSPACE,
		kpA = SDLK_KP_A,
		kpB = SDLK_KP_B,
		kpC = SDLK_KP_C,
		kpD = SDLK_KP_D,
		kpE = SDLK_KP_E,
		kpF = SDLK_KP_F,
		kpXor = SDLK_KP_XOR,
		kpPower = SDLK_KP_POWER,
		kpPercent = SDLK_KP_PERCENT,
		kpLess = SDLK_KP_LESS,
		kpGreater = SDLK_KP_GREATER,
		kpAmpersand = SDLK_KP_AMPERSAND,
		kpDblampersand = SDLK_KP_DBLAMPERSAND,
		kpVerticalbar = SDLK_KP_VERTICALBAR,
		kpDblverticalbar = SDLK_KP_DBLVERTICALBAR,
		kpColon = SDLK_KP_COLON,
		kpHash = SDLK_KP_HASH,
		kpSpace = SDLK_KP_SPACE,
		kpAt = SDLK_KP_AT,
		kpExclam = SDLK_KP_EXCLAM,
		kpMemstore = SDLK_KP_MEMSTORE,
		kpMemrecall = SDLK_KP_MEMRECALL,
		kpMemclear = SDLK_KP_MEMCLEAR,
		kpMemadd = SDLK_KP_MEMADD,
		kpMemsubtract = SDLK_KP_MEMSUBTRACT,
		kpMemmultiply = SDLK_KP_MEMMULTIPLY,
		kpMemdivide = SDLK_KP_MEMDIVIDE,
		kpPlusminus = SDLK_KP_PLUSMINUS,
		kpClear = SDLK_KP_CLEAR,
		kpClearentry = SDLK_KP_CLEARENTRY,
		kpBinary = SDLK_KP_BINARY,
		kpOctal = SDLK_KP_OCTAL,
		kpDecimal = SDLK_KP_DECIMAL,
		kpHexadecimal = SDLK_KP_HEXADECIMAL,
		lctrl = SDLK_LCTRL,
		lshift = SDLK_LSHIFT,
		lalt = SDLK_LALT,
		lgui = SDLK_LGUI,
		rctrl = SDLK_RCTRL,
		rshift = SDLK_RSHIFT,
		ralt = SDLK_RALT,
		rgui = SDLK_RGUI,
		mode = SDLK_MODE,
		audionext = SDLK_AUDIONEXT,
		audioprev = SDLK_AUDIOPREV,
		audiostop = SDLK_AUDIOSTOP,
		audioplay = SDLK_AUDIOPLAY,
		audiomute = SDLK_AUDIOMUTE,
		mediaselect = SDLK_MEDIASELECT,
		www = SDLK_WWW,
		mail = SDLK_MAIL,
		calculator = SDLK_CALCULATOR,
		computer = SDLK_COMPUTER,
		acSearch = SDLK_AC_SEARCH,
		acHome = SDLK_AC_HOME,
		acBack = SDLK_AC_BACK,
		acForward = SDLK_AC_FORWARD,
		acStop = SDLK_AC_STOP,
		acRefresh = SDLK_AC_REFRESH,
		acBookmarks = SDLK_AC_BOOKMARKS,
		brightnessdown = SDLK_BRIGHTNESSDOWN,
		brightnessup = SDLK_BRIGHTNESSUP,
		displayswitch = SDLK_DISPLAYSWITCH,
		kbdillumtoggle = SDLK_KBDILLUMTOGGLE,
		kbdillumdown = SDLK_KBDILLUMDOWN,
		kbdillumup = SDLK_KBDILLUMUP,
		eject = SDLK_EJECT,
		sleep = SDLK_SLEEP
	};
	
	/**
	 * @name Keycode comparison operator
	 * @{
	 */
	VAS_DECLSPEC bool operator==(SDL_Keycode lhs, Keycode rhs);
	VAS_DECLSPEC bool operator==(Keycode lhs, SDL_Keycode rhs);
	VAS_DECLSPEC bool operator!=(SDL_Keycode lhs, Keycode rhs);
	VAS_DECLSPEC bool operator!=(Keycode lhs, SDL_Keycode rhs);
	/** @} */
	/** @} */
}